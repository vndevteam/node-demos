meta {
  name: 02. Sign Document (Normal Flow)
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/sign/{{documentId}}
  body: none
  auth: none
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response should indicate success", function() {
    expect(res.getBody().success).to.equal(true);
  });

  test("Response should contain success message", function() {
    expect(res.getBody().message).to.contain("Sign request completed successfully");
    expect(res.getBody().message).to.contain(bru.getEnvVar("documentId"));
  });

  test("Response should contain data object", function() {
    expect(res.getBody().data).to.be.an('object');
  });

  test("Data should contain signId", function() {
    expect(res.getBody().data.signId).to.equal(bru.getEnvVar("documentId"));
  });

  test("Data should contain status completed", function() {
    expect(res.getBody().data.status).to.equal("completed");
  });

  test("Data should contain duration", function() {
    expect(res.getBody().data.duration).to.be.a('string');
    expect(res.getBody().data.duration).to.match(/\d+ms/);
  });

  test("Data should contain timestamp", function() {
    expect(res.getBody().data.timestamp).to.be.a('string');
  });

  test("Process should take approximately 8 seconds", function() {
    const duration = parseInt(res.getBody().data.duration);
    expect(duration).to.be.greaterThan(7500); // Allow some tolerance
    expect(duration).to.be.lessThan(9000);
  });
}
